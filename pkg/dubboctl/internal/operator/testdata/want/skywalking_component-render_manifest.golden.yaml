# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: "elasticsearch-master-pdb"
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: "elasticsearch-master"
---
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch-master
  labels:
    heritage: "Helm"
    release: "skywalking"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations: {}
spec:
  type: ClusterIP
  selector:
    heritage: "Helm"
    release: "skywalking"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  ports:
    - name: http
      protocol: TCP
      port: 9200
    - name: transport
      protocol: TCP
      port: 9300
---
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch-master-headless
  labels:
    heritage: "Helm"
    release: "skywalking"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  clusterIP: None # This is needed for statefulset hostnames like elasticsearch-0 to resolve
  # Create endpoints also if the related pod isn't ready
  publishNotReadyAddresses: true
  selector:
    app: "elasticsearch-master"
  ports:
    - name: http
      port: 9200
    - name: transport
      port: 9300
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-master
  labels:
    heritage: "Helm"
    release: "skywalking"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    esMajorVersion: "6"
spec:
  serviceName: elasticsearch-master-headless
  selector:
    matchLabels:
      app: "elasticsearch-master"
  replicas: 3
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      name: "elasticsearch-master"
      labels:
        heritage: "Helm"
        release: "skywalking"
        chart: "elasticsearch"
        app: "elasticsearch-master"
      annotations:
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - "elasticsearch-master"
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 120
      volumes:
      initContainers:
        - name: configure-sysctl
          securityContext:
            runAsUser: 0
            privileged: true
          image: "docker.elastic.co/elasticsearch/elasticsearch:6.8.6"
          imagePullPolicy: "IfNotPresent"
          command: ["sysctl", "-w", "vm.max_map_count=262144"]
          resources: {}
      containers:
        - name: "elasticsearch"
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          image: "docker.elastic.co/elasticsearch/elasticsearch:6.8.6"
          imagePullPolicy: "IfNotPresent"
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 3
            timeoutSeconds: 5
            exec:
              command:
                - sh
                - -c
                - |
                  #!/usr/bin/env bash -e
                  # If the node is starting up wait for the cluster to be ready (request params: 'wait_for_status=green&timeout=1s' )
                  # Once it has started only check that the node itself is responding
                  START_FILE=/tmp/.es_start_file
                  http () {
                      local path="${1}"
                      if [ -n "${ELASTIC_USERNAME}" ] && [ -n "${ELASTIC_PASSWORD}" ]; then
                        BASIC_AUTH="-u ${ELASTIC_USERNAME}:${ELASTIC_PASSWORD}"
                      else
                        BASIC_AUTH=''
                      fi
                      curl -XGET -s -k --fail ${BASIC_AUTH} http://127.0.0.1:9200${path}
                  }
                  if [ -f "${START_FILE}" ]; then
                      echo 'Elasticsearch is already running, lets check the node is healthy and there are master nodes available'
                      http "/_cluster/health?timeout=0s"
                  else
                      echo 'Waiting for elasticsearch cluster to become cluster to be ready (request params: "wait_for_status=green&timeout=1s" )'
                      if http "/_cluster/health?wait_for_status=green&timeout=1s" ; then
                          touch ${START_FILE}
                          exit 0
                      else
                          echo 'Cluster is not yet ready (request params: "wait_for_status=green&timeout=1s" )'
                          exit 1
                      fi
                  fi
          ports:
            - name: http
              containerPort: 9200
            - name: transport
              containerPort: 9300
          resources:
            limits:
              cpu: 1000m
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 2Gi
          env:
            - name: node.name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: discovery.zen.minimum_master_nodes
              value: "2"
            - name: discovery.zen.ping.unicast.hosts
              value: "elasticsearch-master-headless"
            - name: cluster.name
              value: "elasticsearch"
            - name: network.host
              value: "0.0.0.0"
            - name: ES_JAVA_OPTS
              value: "-Xmx1g -Xms1g"
            - name: node.data
              value: "true"
            - name: node.ingest
              value: "true"
            - name: node.master
              value: "true"
          volumeMounts:
---
apiVersion: v1
kind: Pod
metadata:
  name: "skywalking-[A-Za-z0-9]+-test"
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: "skywalking-[A-Za-z0-9]+-test"
      image: "docker.elastic.co/elasticsearch/elasticsearch:6.8.6"
      command:
        - "sh"
        - "-c"
        - |
          #!/usr/bin/env bash -e
          curl -XGET --fail 'elasticsearch-master:9200/_cluster/health?wait_for_status=green&timeout=1s'
  restartPolicy: Never
---
# https://docs.sentry.io/server/installation/docker/#running-migrations
apiVersion: batch/v1
kind: Job
metadata:
  name: "skywalking-es-init"
  labels:
    app: skywalking
    chart: skywalking-4.3.0
    component: "skywalking-job"
    heritage: Helm
    release: skywalking
spec:
  template:
    metadata:
      name: "skywalking-es-init"
      labels:
        app: skywalking
        component: "skywalking-job"
        release: skywalking
    spec:
      serviceAccountName: skywalking-oap
      restartPolicy: Never
      initContainers:
        - name: wait-for-elasticsearch
          image: busybox:1.30
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'for i in $(seq 1 60); do nc -z -w3 elasticsearch 9200 && exit 0 || sleep 5; done; exit 1']
      containers:
        - name: oap
          image: skywalking.docker.scarf.sh/apache/skywalking-oap-server:9.3.0
          imagePullPolicy: IfNotPresent
          env:
            - name: JAVA_OPTS
              value: "-Xmx2g -Xms2g -Dmode=init"
            - name: SW_STORAGE
              value: elasticsearch
            - name: SW_STORAGE_ES_CLUSTER_NODES
              value: "elasticsearch:9200"
            - name: SW_ES_USER
              value: "xxx"
            - name: SW_ES_PASSWORD
              value: "xxx"
          volumeMounts:
      volumes:
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: skywalking
    chart: skywalking-4.3.0
    component: "oap"
    heritage: Helm
    release: skywalking
  name: skywalking-oap
spec:
  replicas: 2
  selector:
    matchLabels:
      app: skywalking
      component: "oap"
      release: skywalking
  template:
    metadata:
      labels:
        app: skywalking
        component: "oap"
        release: skywalking
    spec:
      serviceAccountName: skywalking-oap
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app: "skywalking"
                    release: "skywalking"
                    component: "oap"
      initContainers:
        - name: wait-for-elasticsearch
          image: busybox:1.30
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'for i in $(seq 1 60); do nc -z -w3 elasticsearch 9200 && exit 0 || sleep 5; done; exit 1']
      containers:
        - name: oap
          image: skywalking.docker.scarf.sh/apache/skywalking-oap-server:9.3.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            tcpSocket:
              port: 12800
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            tcpSocket:
              port: 12800
            initialDelaySeconds: 15
            periodSeconds: 20
          ports:
            - containerPort: 11800
              name: grpc
            - containerPort: 12800
              name: rest
          env:
            - name: JAVA_OPTS
              value: "-Dmode=no-init -Xmx2g -Xms2g"
            - name: SW_CLUSTER
              value: kubernetes
            - name: SW_CLUSTER_K8S_NAMESPACE
              value: "dubbo-system"
            - name: SW_CLUSTER_K8S_LABEL
              value: "app=skywalking,release=skywalking,component=oap"
            - name: SKYWALKING_COLLECTOR_UID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: SW_STORAGE
              value: elasticsearch
            - name: SW_STORAGE_ES_CLUSTER_NODES
              value: "elasticsearch:9200"
            - name: SW_ES_USER
              value: "xxx"
            - name: SW_ES_PASSWORD
              value: "xxx"
          volumeMounts:
      volumes:
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: skywalking
  labels:
    app: skywalking
    chart: "skywalking-4.3.0"
    release: "skywalking"
    heritage: "Helm"
rules:
  - apiGroups: [""]
    resources: ["pods", "configmaps"]
    verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: skywalking
  labels:
    app: skywalking
    chart: "skywalking-4.3.0"
    release: "skywalking"
    heritage: "Helm"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: skywalking
subjects:
  - kind: ServiceAccount
    name: skywalking-oap
    namespace: dubbo-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: skywalking
    chart: skywalking-4.3.0
    component: "oap"
    heritage: Helm
    release: skywalking
  name: skywalking-oap
---
apiVersion: v1
kind: Service
metadata:
  name: skywalking-oap
  labels:
    app: skywalking
    chart: skywalking-4.3.0
    component: "oap"
    heritage: Helm
    release: skywalking
spec:
  type: ClusterIP
  ports:
    - port: 11800
      name: grpc
    - port: 12800
      name: rest
  selector:
    app: skywalking
    component: "oap"
    release: skywalking
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: skywalking-ui
  labels:
    app: skywalking
    chart: skywalking-4.3.0
    component: "ui"
    heritage: Helm
    release: skywalking
spec:
  replicas: 1
  selector:
    matchLabels:
      app: skywalking
      component: "ui"
      release: skywalking
  template:
    metadata:
      labels:
        app: skywalking
        component: "ui"
        release: skywalking
    spec:
      affinity:
      containers:
        - name: ui
          image: skywalking.docker.scarf.sh/apache/skywalking-ui:9.3.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: page
          env:
            - name: SW_OAP_ADDRESS
              value: http://skywalking-oap:12800
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: skywalking
    chart: skywalking-4.3.0
    component: "ui"
    heritage: Helm
    release: skywalking
  name: skywalking-ui
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  selector:
    app: skywalking
    component: "ui"
    release: skywalking
---
