//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Licensed to the Apache Software Foundation (ASF) under one or more
// contributor license agreements.  See the NOTICE file distributed with
// this work for additional information regarding copyright ownership.
// The ASF licenses this file to You under the Apache License, Version 2.0
// (the "License"); you may not use this file except in compliance with
// the License.  You may obtain a copy of the License at
//
//	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1beta1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthenticationPolicy) DeepCopyInto(out *AuthenticationPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthenticationPolicy.
func (in *AuthenticationPolicy) DeepCopy() *AuthenticationPolicy {
	if in == nil {
		return nil
	}
	out := new(AuthenticationPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AuthenticationPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthenticationPolicyExtend) DeepCopyInto(out *AuthenticationPolicyExtend) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthenticationPolicyExtend.
func (in *AuthenticationPolicyExtend) DeepCopy() *AuthenticationPolicyExtend {
	if in == nil {
		return nil
	}
	out := new(AuthenticationPolicyExtend)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthenticationPolicyList) DeepCopyInto(out *AuthenticationPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AuthenticationPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthenticationPolicyList.
func (in *AuthenticationPolicyList) DeepCopy() *AuthenticationPolicyList {
	if in == nil {
		return nil
	}
	out := new(AuthenticationPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AuthenticationPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthenticationPolicyPortLevel) DeepCopyInto(out *AuthenticationPolicyPortLevel) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthenticationPolicyPortLevel.
func (in *AuthenticationPolicyPortLevel) DeepCopy() *AuthenticationPolicyPortLevel {
	if in == nil {
		return nil
	}
	out := new(AuthenticationPolicyPortLevel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthenticationPolicySelector) DeepCopyInto(out *AuthenticationPolicySelector) {
	*out = *in
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NotNamespaces != nil {
		in, out := &in.NotNamespaces, &out.NotNamespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IpBlocks != nil {
		in, out := &in.IpBlocks, &out.IpBlocks
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NotIpBlocks != nil {
		in, out := &in.NotIpBlocks, &out.NotIpBlocks
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Principals != nil {
		in, out := &in.Principals, &out.Principals
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NotPrincipals != nil {
		in, out := &in.NotPrincipals, &out.NotPrincipals
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Extends != nil {
		in, out := &in.Extends, &out.Extends
		*out = make([]AuthenticationPolicyExtend, len(*in))
		copy(*out, *in)
	}
	if in.NotExtends != nil {
		in, out := &in.NotExtends, &out.NotExtends
		*out = make([]AuthenticationPolicyExtend, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthenticationPolicySelector.
func (in *AuthenticationPolicySelector) DeepCopy() *AuthenticationPolicySelector {
	if in == nil {
		return nil
	}
	out := new(AuthenticationPolicySelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthenticationPolicySpec) DeepCopyInto(out *AuthenticationPolicySpec) {
	*out = *in
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = make([]AuthenticationPolicySelector, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PortLevel != nil {
		in, out := &in.PortLevel, &out.PortLevel
		*out = make([]AuthenticationPolicyPortLevel, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthenticationPolicySpec.
func (in *AuthenticationPolicySpec) DeepCopy() *AuthenticationPolicySpec {
	if in == nil {
		return nil
	}
	out := new(AuthenticationPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizationPolicy) DeepCopyInto(out *AuthorizationPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizationPolicy.
func (in *AuthorizationPolicy) DeepCopy() *AuthorizationPolicy {
	if in == nil {
		return nil
	}
	out := new(AuthorizationPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AuthorizationPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizationPolicyCondition) DeepCopyInto(out *AuthorizationPolicyCondition) {
	*out = *in
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]AuthorizationPolicyMatch, len(*in))
		copy(*out, *in)
	}
	if in.NotValues != nil {
		in, out := &in.NotValues, &out.NotValues
		*out = make([]AuthorizationPolicyMatch, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizationPolicyCondition.
func (in *AuthorizationPolicyCondition) DeepCopy() *AuthorizationPolicyCondition {
	if in == nil {
		return nil
	}
	out := new(AuthorizationPolicyCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizationPolicyExtend) DeepCopyInto(out *AuthorizationPolicyExtend) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizationPolicyExtend.
func (in *AuthorizationPolicyExtend) DeepCopy() *AuthorizationPolicyExtend {
	if in == nil {
		return nil
	}
	out := new(AuthorizationPolicyExtend)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizationPolicyList) DeepCopyInto(out *AuthorizationPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AuthorizationPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizationPolicyList.
func (in *AuthorizationPolicyList) DeepCopy() *AuthorizationPolicyList {
	if in == nil {
		return nil
	}
	out := new(AuthorizationPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AuthorizationPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizationPolicyMatch) DeepCopyInto(out *AuthorizationPolicyMatch) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizationPolicyMatch.
func (in *AuthorizationPolicyMatch) DeepCopy() *AuthorizationPolicyMatch {
	if in == nil {
		return nil
	}
	out := new(AuthorizationPolicyMatch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizationPolicyRule) DeepCopyInto(out *AuthorizationPolicyRule) {
	*out = *in
	in.From.DeepCopyInto(&out.From)
	in.To.DeepCopyInto(&out.To)
	in.When.DeepCopyInto(&out.When)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizationPolicyRule.
func (in *AuthorizationPolicyRule) DeepCopy() *AuthorizationPolicyRule {
	if in == nil {
		return nil
	}
	out := new(AuthorizationPolicyRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizationPolicySource) DeepCopyInto(out *AuthorizationPolicySource) {
	*out = *in
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NotNamespaces != nil {
		in, out := &in.NotNamespaces, &out.NotNamespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IpBlocks != nil {
		in, out := &in.IpBlocks, &out.IpBlocks
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NotIpBlocks != nil {
		in, out := &in.NotIpBlocks, &out.NotIpBlocks
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Principals != nil {
		in, out := &in.Principals, &out.Principals
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NotPrincipals != nil {
		in, out := &in.NotPrincipals, &out.NotPrincipals
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Extends != nil {
		in, out := &in.Extends, &out.Extends
		*out = make([]AuthorizationPolicyExtend, len(*in))
		copy(*out, *in)
	}
	if in.NotExtends != nil {
		in, out := &in.NotExtends, &out.NotExtends
		*out = make([]AuthorizationPolicyExtend, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizationPolicySource.
func (in *AuthorizationPolicySource) DeepCopy() *AuthorizationPolicySource {
	if in == nil {
		return nil
	}
	out := new(AuthorizationPolicySource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizationPolicySpec) DeepCopyInto(out *AuthorizationPolicySpec) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]AuthorizationPolicyRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizationPolicySpec.
func (in *AuthorizationPolicySpec) DeepCopy() *AuthorizationPolicySpec {
	if in == nil {
		return nil
	}
	out := new(AuthorizationPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizationPolicyTarget) DeepCopyInto(out *AuthorizationPolicyTarget) {
	*out = *in
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NotNamespaces != nil {
		in, out := &in.NotNamespaces, &out.NotNamespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IpBlocks != nil {
		in, out := &in.IpBlocks, &out.IpBlocks
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NotIpBlocks != nil {
		in, out := &in.NotIpBlocks, &out.NotIpBlocks
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Principals != nil {
		in, out := &in.Principals, &out.Principals
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NotPrincipals != nil {
		in, out := &in.NotPrincipals, &out.NotPrincipals
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Extends != nil {
		in, out := &in.Extends, &out.Extends
		*out = make([]AuthorizationPolicyExtend, len(*in))
		copy(*out, *in)
	}
	if in.NotExtends != nil {
		in, out := &in.NotExtends, &out.NotExtends
		*out = make([]AuthorizationPolicyExtend, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizationPolicyTarget.
func (in *AuthorizationPolicyTarget) DeepCopy() *AuthorizationPolicyTarget {
	if in == nil {
		return nil
	}
	out := new(AuthorizationPolicyTarget)
	in.DeepCopyInto(out)
	return out
}
