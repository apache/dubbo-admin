/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Code generated by tools/generate_deepcopy_types.go. DO NOT EDIT!

package dubbo_apache_org_v1alpha1

import (
	fmt "fmt"
	math "math"

	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = proto.Marshal
	_ = fmt.Errorf
	_ = math.Inf
)

// DeepCopyInto supports using ServiceNameMapping within kubernetes types, where deepcopy-gen is used.
func (in *ServiceNameMapping) DeepCopyInto(out *ServiceNameMapping) {
	p := proto.Clone(in).(*ServiceNameMapping)
	*out = *p
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceNameMapping.
func (in *ServiceNameMapping) DeepCopy() *ServiceNameMapping {
	if in == nil {
		return nil
	}
	out := new(ServiceNameMapping)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInterface is an autogenerated deepcopy function, copying the receiver, creating a new ServiceNameMapping.
func (in *ServiceNameMapping) DeepCopyInterface() interface{} {
	return in.DeepCopy()
}
