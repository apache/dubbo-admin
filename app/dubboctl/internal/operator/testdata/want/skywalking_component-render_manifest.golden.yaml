# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: elasticsearch-master-pdb
  namespace: dubbo-system
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: elasticsearch-master

---
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  labels:
    app: elasticsearch-master
    chart: elasticsearch
    heritage: Helm
    release: skywalking
  name: elasticsearch-master
  namespace: dubbo-system
spec:
  ports:
    - name: http
      port: 9200
      protocol: TCP
    - name: transport
      port: 9300
      protocol: TCP
  selector:
    app: elasticsearch-master
    chart: elasticsearch
    heritage: Helm
    release: skywalking
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  labels:
    app: elasticsearch-master
    chart: elasticsearch
    heritage: Helm
    release: skywalking
  name: elasticsearch-master-headless
  namespace: dubbo-system
spec:
  clusterIP: None
  ports:
    - name: http
      port: 9200
    - name: transport
      port: 9300
  publishNotReadyAddresses: true
  selector:
    app: elasticsearch-master

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    esMajorVersion: "6"
  labels:
    app: elasticsearch-master
    chart: elasticsearch
    heritage: Helm
    release: skywalking
  name: elasticsearch-master
  namespace: dubbo-system
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app: elasticsearch-master
  serviceName: elasticsearch-master-headless
  template:
    metadata:
      annotations: null
      labels:
        app: elasticsearch-master
        chart: elasticsearch
        heritage: Helm
        release: skywalking
      name: elasticsearch-master
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - elasticsearch-master
              topologyKey: kubernetes.io/hostname
      containers:
        - env:
            - name: node.name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: discovery.zen.minimum_master_nodes
              value: "2"
            - name: discovery.zen.ping.unicast.hosts
              value: elasticsearch-master-headless
            - name: cluster.name
              value: elasticsearch
            - name: network.host
              value: 0.0.0.0
            - name: ES_JAVA_OPTS
              value: -Xmx1g -Xms1g
            - name: node.data
              value: "true"
            - name: node.ingest
              value: "true"
            - name: node.master
              value: "true"
          image: docker.elastic.co/elasticsearch/elasticsearch:6.8.6
          imagePullPolicy: IfNotPresent
          name: elasticsearch
          ports:
            - containerPort: 9200
              name: http
            - containerPort: 9300
              name: transport
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - |
                  #!/usr/bin/env bash -e
                  # If the node is starting up wait for the cluster to be ready (request params: 'wait_for_status=green&timeout=1s' )
                  # Once it has started only check that the node itself is responding
                  START_FILE=/tmp/.es_start_file
                  
                  http () {
                      local path="${1}"
                      if [ -n "${ELASTIC_USERNAME}" ] && [ -n "${ELASTIC_PASSWORD}" ]; then
                        BASIC_AUTH="-u ${ELASTIC_USERNAME}:${ELASTIC_PASSWORD}"
                      else
                        BASIC_AUTH=''
                      fi
                      curl -XGET -s -k --fail ${BASIC_AUTH} http://127.0.0.1:9200${path}
                  }
                  
                  if [ -f "${START_FILE}" ]; then
                      echo 'Elasticsearch is already running, lets check the node is healthy and there are master nodes available'
                      http "/_cluster/health?timeout=0s"
                  else
                      echo 'Waiting for elasticsearch cluster to become cluster to be ready (request params: "wait_for_status=green&timeout=1s" )'
                      if http "/_cluster/health?wait_for_status=green&timeout=1s" ; then
                          touch ${START_FILE}
                          exit 0
                      else
                          echo 'Cluster is not yet ready (request params: "wait_for_status=green&timeout=1s" )'
                          exit 1
                      fi
                  fi
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 3
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 1000m
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 2Gi
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts: null
      initContainers:
        - command:
            - sysctl
            - -w
            - vm.max_map_count=262144
          image: docker.elastic.co/elasticsearch/elasticsearch:6.8.6
          imagePullPolicy: IfNotPresent
          name: configure-sysctl
          resources: {}
          securityContext:
            privileged: true
            runAsUser: 0
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      terminationGracePeriodSeconds: 120
      volumes: null
  updateStrategy:
    type: RollingUpdate

---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test-success
  name: skywalking-[A-Za-z0-9]+-test
  namespace: dubbo-system
spec:
  containers:
    - command:
        - sh
        - -c
        - |
          #!/usr/bin/env bash -e
          curl -XGET --fail 'elasticsearch-master:9200/_cluster/health?wait_for_status=green&timeout=1s'
      image: docker.elastic.co/elasticsearch/elasticsearch:6.8.6
      name: skywalking-[A-Za-z0-9]+-test
  restartPolicy: Never

---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app: skywalking
    chart: skywalking-4.3.0
    component: skywalking-job
    heritage: Helm
    release: skywalking
  name: skywalking-es-init
  namespace: dubbo-system
spec:
  template:
    metadata:
      labels:
        app: skywalking
        component: skywalking-job
        release: skywalking
      name: skywalking-es-init
    spec:
      containers:
        - env:
            - name: JAVA_OPTS
              value: -Xmx2g -Xms2g -Dmode=init
            - name: SW_STORAGE
              value: elasticsearch
            - name: SW_STORAGE_ES_CLUSTER_NODES
              value: elasticsearch:9200
            - name: SW_ES_USER
              value: xxx
            - name: SW_ES_PASSWORD
              value: xxx
          image: skywalking.docker.scarf.sh/apache/skywalking-oap-cp-server:9.3.0
          imagePullPolicy: IfNotPresent
          name: oap
          volumeMounts: null
      initContainers:
        - command:
            - sh
            - -c
            - for i in $(seq 1 60); do nc -z -w3 elasticsearch 9200 && exit 0 || sleep
              5; done; exit 1
          image: busybox:1.30
          imagePullPolicy: IfNotPresent
          name: wait-for-elasticsearch
      restartPolicy: Never
      serviceAccountName: skywalking-oap
      volumes: null

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: skywalking
    chart: skywalking-4.3.0
    component: oap
    heritage: Helm
    release: skywalking
  name: skywalking-oap
  namespace: dubbo-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: skywalking
      component: oap
      release: skywalking
  template:
    metadata:
      labels:
        app: skywalking
        component: oap
        release: skywalking
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: skywalking
                    component: oap
                    release: skywalking
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - env:
            - name: JAVA_OPTS
              value: -Dmode=no-init -Xmx2g -Xms2g
            - name: SW_CLUSTER
              value: kubernetes
            - name: SW_CLUSTER_K8S_NAMESPACE
              value: dubbo-system
            - name: SW_CLUSTER_K8S_LABEL
              value: app=skywalking,release=skywalking,component=oap
            - name: SKYWALKING_COLLECTOR_UID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
            - name: SW_STORAGE
              value: elasticsearch
            - name: SW_STORAGE_ES_CLUSTER_NODES
              value: elasticsearch:9200
            - name: SW_ES_USER
              value: xxx
            - name: SW_ES_PASSWORD
              value: xxx
          image: skywalking.docker.scarf.sh/apache/skywalking-oap-cp-server:9.3.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            initialDelaySeconds: 15
            periodSeconds: 20
            tcpSocket:
              port: 12800
          name: oap
          ports:
            - containerPort: 11800
              name: grpc
            - containerPort: 12800
              name: rest
          readinessProbe:
            initialDelaySeconds: 15
            periodSeconds: 20
            tcpSocket:
              port: 12800
          volumeMounts: null
      initContainers:
        - command:
            - sh
            - -c
            - for i in $(seq 1 60); do nc -z -w3 elasticsearch 9200 && exit 0 || sleep
              5; done; exit 1
          image: busybox:1.30
          imagePullPolicy: IfNotPresent
          name: wait-for-elasticsearch
      serviceAccountName: skywalking-oap
      volumes: null

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: skywalking
    chart: skywalking-4.3.0
    heritage: Helm
    release: skywalking
  name: skywalking
  namespace: dubbo-system
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - configmaps
    verbs:
      - get
      - watch
      - list

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: skywalking
    chart: skywalking-4.3.0
    heritage: Helm
    release: skywalking
  name: skywalking
  namespace: dubbo-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: skywalking
subjects:
  - kind: ServiceAccount
    name: skywalking-oap
    namespace: dubbo-system

---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: skywalking
    chart: skywalking-4.3.0
    component: oap
    heritage: Helm
    release: skywalking
  name: skywalking-oap
  namespace: dubbo-system

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: skywalking
    chart: skywalking-4.3.0
    component: oap
    heritage: Helm
    release: skywalking
  name: skywalking-oap
  namespace: dubbo-system
spec:
  ports:
    - name: grpc
      port: 11800
    - name: rest
      port: 12800
  selector:
    app: skywalking
    component: oap
    release: skywalking
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: skywalking
    chart: skywalking-4.3.0
    component: ui
    heritage: Helm
    release: skywalking
  name: skywalking-ui
  namespace: dubbo-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: skywalking
      component: ui
      release: skywalking
  template:
    metadata:
      labels:
        app: skywalking
        component: ui
        release: skywalking
    spec:
      affinity: null
      containers:
        - env:
            - name: SW_OAP_ADDRESS
              value: http://skywalking-oap:12800
          image: skywalking.docker.scarf.sh/apache/skywalking-ui:9.3.0
          imagePullPolicy: IfNotPresent
          name: ui
          ports:
            - containerPort: 8080
              name: page

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: skywalking
    chart: skywalking-4.3.0
    component: ui
    heritage: Helm
    release: skywalking
  name: skywalking-ui
  namespace: dubbo-system
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: skywalking
    component: ui
    release: skywalking
  type: ClusterIP

---
